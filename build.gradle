subprojects {
    group 'EkoLab'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    configurations.all {
        //exclude group: "commons-logging", module: "commons-logging" // нужен тестам
        //exclude group: "org.jboss.logging", module: "jboss-logging"
        //exclude group: 'spring-data-jpa', module: 'spring-data-jpa'
        exclude module: 'spring-boot-starter-tomcat'
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        testCompile group: 'org.springframework.boot',  name: 'spring-boot-starter-test',           version: '+'

        testCompile group: 'org.testng',                name: 'testng',                             version: '+'
    }

    test {
        // enable TestNG support (default is JUnit)
        useTestNG()

        testLogging {
            // set options for log level LIFECYCLE
            events "passed", "skipped", "failed", "standardOut"
            showExceptions true
            exceptionFormat "full"
            showCauses true
            showStackTraces true

            // set options for log level DEBUG and INFO
            debug {
                events "started", "passed", "skipped", "failed", "standardOut", "standardError"
                exceptionFormat "full"
            }
            info.events = debug.events
            info.exceptionFormat = debug.exceptionFormat

            afterSuite { desc, result ->
                if (!desc.parent) { // will match the outermost suite
                    def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                    def startItem = '|  ', endItem = '  |'
                    def repeatLength = startItem.length() + output.length() + endItem.length()
                    println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                }
            }
        }
    }
}
