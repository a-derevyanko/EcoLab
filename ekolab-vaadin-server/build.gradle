apply plugin: 'war'
apply plugin: 'org.springframework.boot'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:+")
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://maven.vaadin.com/vaadin-addons'
    }
}

dependencies {
    compile project (':eko-server')
    compile project (':ekolab-vaadin-client')
    //compile project (':ekolab-server')
    compile group: 'org.apache.commons',            name: 'commons-lang3',                      version: '+'
    compile(group: 'com.vaadin',                   name: 'vaadin-spring-boot-starter',         version: '+') {
        exclude group: 'com.vaadin'
    }

    compile group: 'org.vaadin.spring.extensions',  name: 'vaadin-spring-ext-security',         version: '+'
    compile group: 'org.vaadin.spring.extensions',  name: 'vaadin-spring-ext-boot',             version: '+'

    compile group: 'org.springframework.boot',  name: 'spring-boot-configuration-processor',   version: '+'

    runtime group: 'de.codecentric',            name: 'spring-boot-admin-starter-client',      version: '+'
}

springBoot.mainClass = 'org.ekolab.client.vaadin.server.VaadinApplication'

/**
 * Линковка ClassPath, чтобы обойти ошибку Windows 'CreateProcess error=206, Имя файла или его расширение имеет слишком большую длину'
 */
task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURI().toString().replaceFirst("/file:/+/", "/")
            }.join(' ')
        }
    }
}

bootRun {
    dependsOn pathingJar
    doFirst {
        classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
    }
    systemProperties(System.properties)
    jvmArgs = ["-Dfile.encoding=UTF-8", "-Dspring.profiles.active=dev-h2", "-Dorg.jooq.no-logo=true"]
}

bootRepackage {
    enabled = true
    executable = true
}
clean.delete 'src/main/webapp'

task copyVaadinClient(type: Copy) {
    from project (':ekolab-vaadin-client').file('/src/main/webapp')
    into 'src/main/webapp'
}

compileJava.dependsOn(copyVaadinClient)
compileJava.dependsOn(processResources)