apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

buildscript {
    ext {
        springBootVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://maven.vaadin.com/vaadin-addons'
    }
    maven {
        url 'http://jasperreports.sourceforge.net/maven2/'
    }
    maven {
        url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
    }
}

dependencies {
    compile project (':ekolab-vaadin-server')

    providedRuntime group: 'org.springframework.boot',  name: 'spring-boot-starter-jetty',      version: '2.0.0.M6'

    compile group: 'de.huxhorn.lilith',         name: 'de.huxhorn.lilith.3rdparty.junique',     version: '1.0.4'
}

springBoot {
    buildInfo()
}

war {
    baseName = 'EkoLab-Vaddin-Desktop'
    version =  '0.0.1'
}

springBoot.mainClassName 'org.ekolab.client.vaadin.desktop.DesktopVaadinApplication'

/**
 * Линковка ClassPath, чтобы обойти ошибку Windows 'CreateProcess error=206, Имя файла или его расширение имеет слишком большую длину'
 */
task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURI().toString().replaceFirst("/file:/+/", "/")
            }.join(' ')
        }
    }
}

/*bootRun {
    dependsOn pathingJar
    doFirst {
        classpath files(sourceSets.main.output.files, pathingJar.archivePath)
    }
    jvmArgs = ["-Dspring.profiles.active=dev,h2", "-Dorg.jooq.no-logo=true"]
    sourceResources sourceSets.main
}*/

bootWar {
    enabled = true
    launchScript()
}

clean.delete 'src/main/webapp'

task copyVaadinClient(type: Copy) {
    from project (':ekolab-vaadin-client').file('/src/main/webapp')
    into 'src/main/webapp'
}

compileJava.dependsOn(copyVaadinClient)
compileJava.dependsOn(processResources)