
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.5.0")
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "2.2.0"
    id('com.github.ayltai.spring-graalvm-native-plugin') version '1.4.9'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'java'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://maven.vaadin.com/vaadin-addons'
    }
    maven {
        url 'http://jasperreports.sourceforge.net/maven2/'
    }
    maven {
        url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
    }
}

dependencies {
    implementation project (':eco-server')
    implementation project (':ecolab-vaadin-server')
    implementation group: 'de.huxhorn.lilith',         name: 'de.huxhorn.lilith.3rdparty.junique',     version: '1.0.4'
    implementation group: 'commons-lang',            name: 'commons-lang',                      version: '2.6'
    implementation group: 'de.codecentric',                name: 'spring-boot-admin-server',               version: '1.5.4'
    compile("org.springframework.boot:spring-boot-starter-jetty:2.5.0")
}

springBoot.mainClassName = 'org.ecolab.client.vaadin.desktop.DesktopVaadinApplication'


/**
 * Линковка ClassPath, чтобы обойти ошибку Windows 'CreateProcess error=206, Имя файла или его расширение имеет слишком большую длину'
 */
task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURI().toString().replaceFirst("/file:/+/", "/")
            }.join(' ')
        }
    }
}

bootRun {
    dependsOn pathingJar
    doFirst {
        classpath = files(sourceSets.main.output.files, pathingJar.archivePath)
    }
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.active=production,custom,h2", "-Dorg.jooq.no-logo=true"]
}

springBoot {
    buildInfo()
}

nativeImage {
    mainClassName = 'org.ecolab.client.vaadin.desktop.DesktopVaadinApplication'

    initializeAtBuildTime = ["org.springframework.util.unit.DataSize"]

    reportExceptionStackTraces = true
    removeUnusedAutoConfig     = true
    removeYamlSupport          = true
    maxHeapSize                = '6G'

    javaVersion = 11
    traceClassInitialization   = true
    reportExceptionStackTraces = true
    removeUnusedAutoConfig     = true
    printAnalysisCallTree      = true
    verbose                    = true
    enableHttps                = true
}

gitProperties {
    gitPropertiesDir = new File("${project.projectDir.path}/src/main/resources")
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT+03:00"
}

clean.delete 'src/main/webapp'

task copyVaadinClient(type: Copy) {
    from project (':ecolab-vaadin-client').file('/src/main/webapp')
    into 'src/main/webapp'
}

compileJava.dependsOn(copyVaadinClient)
compileJava.dependsOn(processResources)