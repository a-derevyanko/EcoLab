buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

import org.ecolab.gradle.CustomTest

plugins {
    id 'io.freefair.lombok'
}

apply plugin: 'java'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://jasperreports.sourceforge.net/maven2/'
    }
    maven {
        url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
    }
}


dependencies {
    implementation project (':eco-db')
    implementation 'org.jooq:jooq:3.12.2'
    implementation group: 'javax.servlet',             name: 'javax.servlet-api',                          version: '3.1.0'
    implementation group: 'com.google.code.findbugs',  name: 'jsr305',                                     version: '3.0.2'

    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-aop',                    version: '2.5.0'

    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-jetty',                  version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-security',               version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-cache',                  version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-validation',             version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-web',                    version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-configuration-processor',        version: '2.5.0'
    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-actuator',               version: '2.5.0'

    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-jdbc',                   version: '2.5.0'

    implementation group: 'org.springframework.boot',  name: 'spring-boot-starter-mail',                   version: '2.5.0'

    implementation group: 'com.zaxxer',                name: 'HikariCP',                                   version: '2.5.1'

    implementation group: 'org.flywaydb',              name: 'flyway-core',                                version: property("flyway.version")
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine',                               version: '2.5.4'

    implementation group: 'org.jolokia',                   name: 'jolokia-core',                           version: '1.3.5'
    implementation group: 'org.telegram',                  name: 'telegrambots',                       version: '4.1'

    implementation group: 'com.twelvemonkeys.imageio',     name: 'imageio-batik',                      version: '3.3.2'
    implementation group: 'org.apache.xmlgraphics',        name: 'batik-transcoder',                   version: '1.8'
    implementation group: 'org.apache.xmlgraphics',        name: 'batik-codec',                        version: '1.7'
    implementation group: 'org.apache.xmlgraphics',        name: 'xmlgraphics-commons',                version: '1.5'
    implementation group: 'org.apache.commons',            name: 'commons-math3',                      version: '3.6.1'
    implementation group: 'commons-io',                    name: 'commons-io',                         version: '2.6'

    implementation group: 'com.github.aleksandy',          name: 'petrovich',                          version: '1.0.0'

    implementation group: 'net.sourceforge.dynamicreports', name: 'dynamicreports-core',               version: '5.0.0'
    implementation group: 'com.ibm.icu',               name: 'icu4j',                                  version: '59.1'
    runtimeOnly  group: 'net.sf.jasperreports',          name: 'jasperreports-fonts',                version: '6.0.0'

    // TODO
    runtimeOnly      group: 'com.h2database',            name: 'h2',                                 version: property("h2Version")
    runtimeOnly      group: 'org.postgresql',            name: 'postgresql',                         version: '9.4.1212.jre7'

    testImplementation group: 'com.h2database',            name: 'h2',                                 version: '1.4.197'
}

sourceSets {
    main {
        resources {
            exclude '**/max-quality/*'
        }
    }
}

/*check.dependsOn.remove(test)
build.dependsOn.remove(test)*/

task testH2(type:CustomTest){
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.include=test,h2"]
}

task testPostgres(type:CustomTest){
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.include=test,h2"]
}

test.dependsOn(testH2)
test.dependsOn(testPostgres)

def customProperties = ["spring.datasource.url" : "jdbc:h2:file:$project.rootProject.projectDir/$h2File;IFEXISTS=TRUE".toString(),
                        "spring.datasource.username":'user',
                        "spring.datasource.password":'password']

task writeCustomProperties {
    def file = file("${sourceSets.main.resources.srcDirs.first().path}/application-custom.properties")

    def newProperties = new Properties(customProperties)

    if (!file.createNewFile()) {
        def existingProperties = new Properties()
        file.withInputStream { stream -> existingProperties.load(stream) }

        existingProperties.forEach(newProperties.&replace)
    }

    file.withOutputStream { stream -> newProperties.store(stream, null) }
}

processResources.dependsOn writeCustomProperties

check.dependsOn test
build.dependsOn test