buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
}

import org.ecolab.gradle.CustomTest

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.16"
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'



repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://jasperreports.sourceforge.net/maven2/'
    }
    maven {
        url 'http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/'
    }
}


dependencies {
    compile project (':eco-db')
    compile group: 'javax.servlet',             name: 'javax.servlet-api',                          version: '3.1.0'

    compile group: 'org.springframework',       name: 'spring-context-support',                     version: '4.3.11.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-aop',                    version: '1.5.6.RELEASE'

    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-jetty',                  version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-security',               version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-cache',                  version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-validation',             version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-web',                    version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-configuration-processor',        version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-actuator',               version: '1.5.6.RELEASE'

    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-jdbc',                   version: '1.5.6.RELEASE'

    compile group: 'org.springframework.boot',  name: 'spring-boot-starter-mail',                   version: '1.5.6.RELEASE'

    compile group: 'com.zaxxer',                name: 'HikariCP',                                   version: '2.5.1'

    compile group: 'org.flywaydb',              name: 'flyway-core',                                version: property("flyway.version")
    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine',                               version: '2.5.4'

    compile group: 'de.codecentric',                name: 'spring-boot-admin-server',               version: '1.5.4'
    compile group: 'de.codecentric',                name: 'spring-boot-admin-server-ui',            version: '1.5.4'
    compile group: 'org.jolokia',                   name: 'jolokia-core',                           version: '1.3.5'

    compile group: 'com.twelvemonkeys.imageio',     name: 'imageio-batik',                      version: '3.3.2'
    compile group: 'org.apache.xmlgraphics',        name: 'batik-transcoder',                   version: '1.8'
    compile group: 'org.apache.xmlgraphics',        name: 'batik-codec',                        version: '1.7'
    compile group: 'org.apache.xmlgraphics',        name: 'xmlgraphics-commons',                version: '1.5'
    compile group: 'org.apache.commons',            name: 'commons-math3',                      version: '3.6.1'

    compile group: 'com.github.aleksandy',          name: 'petrovich',                          version: '1.0.0'

    compile group: 'net.sourceforge.dynamicreports', name: 'dynamicreports-core',               version: '5.0.0'
    compile group: 'com.ibm.icu',               name: 'icu4j',                                  version: '59.1'
    runtime group: 'net.sf.jasperreports',          name: 'jasperreports-fonts',                version: '6.0.0'

    // TODO
    runtime     group: 'com.h2database',            name: 'h2',                                 version: '1.4.197'
    runtime     group: 'org.postgresql',            name: 'postgresql',                         version: '9.4.1212.jre7'

    providedRuntime group: 'org.springframework.boot',  name: 'spring-boot-starter-jetty',      version: '1.5.6.RELEASE'

    testCompile group: 'com.h2database',            name: 'h2',                                 version: '1.4.197'
}

war {
    baseName = 'EcoLab-Server'
    version =  '0.0.1'
}

sourceSets {
    main {
        resources {
            exclude '**/max-quality/*'
        }
    }
}

springBoot {
    buildInfo()
}

bootRun {
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.active=dev,h2", "-Dorg.jooq.no-logo=true"]
    addResources = true
}

bootRepackage {
    enabled = false
}

gitProperties {
    gitPropertiesDir = new File("${project.projectDir.path}/src/main/resources")
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "GMT+03:00"
}

check.dependsOn.remove(test)
build.dependsOn.remove(test)

task testH2(type:CustomTest){
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.include=test,h2"]
}

task testPostgres(type:CustomTest){
    systemProperties(System.properties)
    jvmArgs = ["-Dspring.profiles.include=test,h2"]
}

task test(type: DefaultTask, overwrite: true) {
    dependsOn testH2
    dependsOn testPostgres
}

def customProperties = ["spring.datasource.url" : "jdbc:h2:file:$project.rootProject.projectDir/$h2File;IFEXISTS=TRUE".toString(),
                        "spring.datasource.username":'user',
                        "spring.datasource.password":'password']

task writeCustomProperties {
    def file = file("${sourceSets.main.resources.srcDirs.first().path}/application-custom.properties")

    def newProperties = new Properties(customProperties)

    if (!file.createNewFile()) {
        def existingProperties = new Properties()
        file.withInputStream { stream -> existingProperties.load(stream) }

        existingProperties.forEach(newProperties.&replace)
    }

    file.withOutputStream { stream -> newProperties.store(stream, null) }
}

processResources.dependsOn writeCustomProperties

check.dependsOn test
build.dependsOn test